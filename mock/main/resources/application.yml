# 服务器相关配置
server:
  port: 8080 # 配置应用监听的端口号
  servlet:
    context-path: /api # 设置应用的上下文路径

# Spring 相关配置
spring:
  profiles:
    active: dev,test # 设置活动的 Spring 配置文件
  main:
    allow-circular-references: false # 不允许循环引用的 Bean
  datasource:
    driver-class-name: ${project.datasource.driver-class-name} # 数据库驱动类名称，从外部配置文件中读取
    # 数据库连接 URL，包含主机、端口、数据库名等参数
    url: jdbc:mysql://${project.datasource.host}:${project.datasource.port}/${project.datasource.database}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: ${project.datasource.username} # 数据库用户名，从外部配置文件中读取
    password: ${project.datasource.password} # 数据库密码，从外部配置文件中读取
    hikari:
      pool-name: project-pool # 连接池名称
      maximum-pool-size: 10 # 最大连接数
      connection-timeout: 30000 # 连接超时时间，单位为毫秒
      minimum-idle: 5 # 最小空闲连接数
      idle-timeout: 1800000 # 连接空闲超时时间，单位为毫秒
      connection-test-query: select 1 # 用于测试连接有效性的 SQL 语句
      auto-commit: true # 是否自动提交
      driver-class-name: ${spring.datasource.driver-class-name} # 数据库驱动类名称，重复定义，确保一致性
  data:
    redis:
      host: ${project.redis.host} # Redis 主机地址，从外部配置文件中读取
      database: ${project.redis.database} # Redis 数据库索引，从外部配置文件中读取
      port: ${project.redis.port} # Redis 端口号，从外部配置文件中读取
      jedis:
        pool:
          max-active: 20 # 最大活跃连接数
          max-wait: 1 # 最大等待时间，单位为毫秒
          max-idle: 10 # 最大空闲连接数
          min-idle: 0 # 最小空闲连接数
      connect-timeout: 2000 # 连接超时时间，单位为毫秒
      password: ${project.redis.password} # Redis 密码，从外部配置文件中读取

# 项目相关文件的仓库地址，存储诸如日志等文件
project:
  root: ${project.root_folder}

# 日志配置
log:
  root:
    level: info # 根日志记录器的级别
  folder: logs/ # 项目的日志文件夹路径

# MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/*.xml # MyBatis 映射文件的位置
  type-aliases-package: org.lingopan.entity.po # MyBatis 类型别名所在的包

# auth配置
auth:
  jwt:
    secret-key: ${project.token.secret-key} # JWT 的密钥
    ttl: 43200000 # JWT 的有效时间，单位为毫秒 此处为12小时
    token-name: token # JWT 的名称

# 微信，QQ登录配置
wechat:
  secret: ${project.wechat.app-secret}
  appid: ${project.wechat.app-id}
  redirect-url: ${project.wechat.redirect-url}
qq:
  app-id: ${project.qq.app-id}
  app-key: ${project.qq.app-key}
  redirect-url: ${project.qq.redirect-url}

# 指定日志配置文件
logging:
  config: classpath:logback-spring.xml
