<?xml version="1.0" encoding="UTF-8" ?>
<!-- 根配置元素，启用配置扫描，扫描周期为10分钟 -->
<configuration scan="true" scanPeriod="10 minutes">

    <!-- 定义控制台Appender，用于将日志输出到控制台 -->
    <appender name="stdot" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 定义日志输出格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!-- 定义日志输出的模式，包括时间、日志级别、类名、方法、行号和日志消息 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss,GMT+8} [%p][%c][%M][%L]-> %m%n</pattern>
        </layout>
    </appender>

    <!-- 从Spring上下文中获取属性值 -->
    <springProperty scope="context" name="log.path" source="project.root"/>
    <springProperty scope="context" name="log.root.level" source="log.root.level"/>
    <springProperty scope="context" name="log.folder" source="log.folder"/>

    <!-- 定义日志文件名称的属性 -->
    <property name="LOG_FILE_NAME" value="project.log"/>
    <property name="LOG_FOLDER" value="logs"/>

    <!-- 定义文件Appender，用于将日志输出到文件 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定日志文件路径 -->
        <file>/${log.path}/${LOG_FOLDER}/${LOG_FILE_NAME}</file>
        <!-- 定义滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 定义日志文件命名模式，包含日期和索引 -->
            <FileNamePattern>/${log.path}/${LOG_FOLDER}/${LOG_FILE_NAME}.%d{yyyyMMdd}.%i</FileNamePattern>
            <!-- 启动时清除历史日志 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 基于时间和大小的文件命名和触发策略 -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 定义日志文件的最大大小 -->
                <MaxFileSize>20MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
            <!-- 保留30天的历史日志 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 定义日志文件编码器 -->
        <encoder>
            <charset>utf-8</charset>
            <!-- 定义日志输出的模式，包括时间、日志级别、类名、方法、行号和日志消息 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss,GMT+8} [%p][%c][%M][%L]-> %m%n</pattern>
        </encoder>
        <!-- 定义是否追加到现有日志文件 -->
        <append>false</append>
        <!-- 定义日志文件是否以审慎模式写入 -->
        <prudent>false</prudent>
    </appender>

    <!-- 定义根日志记录器的级别和附加器 -->
    <root level="${log.root.level}">
        <!-- 引用控制台Appender -->
        <appender-ref ref="stdot"/>
        <!-- 引用文件Appender -->
        <appender-ref ref="file"/>
    </root>

</configuration>
